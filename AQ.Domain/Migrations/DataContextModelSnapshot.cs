// <auto-generated />
using System;
using AQ.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AQ.Domain.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("AQ.Domain.Achievement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AchievementClassId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("CompletedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AchievementClassId");

                    b.ToTable("Achievement", (string)null);
                });

            modelBuilder.Entity("AQ.Domain.AchievementClass", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "IX_AchievementClass_Name")
                        .IsUnique();

                    b.ToTable("AchievementClass", (string)null);
                });

            modelBuilder.Entity("AQ.Domain.Achievement", b =>
                {
                    b.HasOne("AQ.Domain.AchievementClass", "AchievementClass")
                        .WithMany("Achievements")
                        .HasForeignKey("AchievementClassId")
                        .IsRequired();

                    b.Navigation("AchievementClass");
                });

            modelBuilder.Entity("AQ.Domain.AchievementClass", b =>
                {
                    b.Navigation("Achievements");
                });
#pragma warning restore 612, 618
        }
    }
}
